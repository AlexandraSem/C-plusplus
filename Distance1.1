//cpp

#include "Distance.h"

#include <iostream>

Distance::Distance() :
	m_feet(0),
	m_inches(0)
{
}

Distance::Distance(int feet, float inches) :
	m_feet(feet),
	m_inches(inches)
{
}

Distance::Distance(int feet) :
	Distance(feet, 0)
{
}

int Distance::GetFeet () const
{
	return m_feet;
}

float Distance::GetInches() const
{
	return m_inches;
}

void Distance::SetData(int feet, float inches)
{
	m_feet = feet;
	m_inches = inches;
}

void Distance::Read()
{
	std::cin >> m_feet >> m_inches;
}

void Distance::Print()
{
	std::cout << m_feet << "\'" << m_inches << "\"" << std::endl;
}


void Distance::Add(Distance const& d)
{
	m_feet += d.m_feet;
	m_inches += d.m_inches;
	if (m_inches >= 12.0f)
	{
		m_inches -= 12.0f;
		m_feet += 1;
	}
}

void Distance::Deduct(Distance const& d)
{
	m_feet -= d.m_feet;
	m_inches -= d.m_inches;
	if (m_inches < 0)
	{
		m_inches += 12.0f;
		m_feet -= 1;
	}
}

/* Distance Summ(Distance const& d1, Distance const& d2)
{
	Distance result = d1;
	result.Add(d2);
	return result;
}

Distance Diff(Distance const& d1, Distance const& d2)
{
	Distance result = d1;
	result.Add(d2);
	return result;
}*/



Distance Distance::operator+(Distance const& rhs)
{
	Distance result(*this);
	result.Add(rhs);
	return result;
}

void Distance::operator+=(Distance const& rhs)
{
	m_feet += rhs.m_feet;
	m_inches += rhs.m_inches;
	if (m_inches >= 12.0f)
	{
		m_inches -= 12.0f;
		m_feet += 1;
	}
}

Distance Distance::operator-(Distance const& rhs)
{
	Distance result(*this);
	result -= rhs;
	return result;
}

void Distance::operator-=(Distance const& rhs)
{
	m_feet -= rhs.m_feet;
	m_inches -= rhs.m_inches;
	if (m_inches < 0)
	{
		m_inches += 12.0f;
		m_feet -= 1;
	}
}

Distance& Distance::operator++()
{
	m_feet += 1;
	return *this;
}

Distance Distance::operator++(int)
{
	Distance result(*this);
	m_feet++;
	return result;
}

float operator/(Distance const& lhs, Distance const& rhs)
{
	float inches1 = lhs.GetFeet()*12.0f + lhs.GetFeet();
	float inches2 = rhs.GetFeet()*12.0f + rhs.GetFeet();
	return inches1 / inches2;
}
//h
class Distance
{
public:
	Distance();
	Distance(int feet, float inches);
	Distance(int feet);

	int GetFeet() const;
	float GetInches() const;
	void SetData(int feet, float inches);
	void Read();
	void Print();
	void Add(Distance const& d);
	void Deduct(Distance const& d);

	Distance operator+(Distance const& rhs);
	void operator+=(Distance const& rhs);
	Distance operator-(Distance const& rhs);
	void operator-=(Distance const& rhs);
	Distance& operator++();
	Distance operator++(int);

private:
	int m_feet = 0;
	float m_inches = 0;
};

float operator/(Distance const& lhs, Distance const);

// main
#include <iostream>
#include"Distance.h"

int main()
{
  Distance d1(1, 2);
	Distance d2(2, 3);
	Distance d3 = d1 + d2;
	d3.Print();
	return 0;
}
